class SoundPicker{constructor(){this.messageContainer=document.querySelector(".js-message"),this.canvas=document.querySelector(".js-canvas"),this.recordButton=document.querySelector(".js-record"),this.playButton=document.querySelector(".js-play"),this.audioPlayer=document.querySelector(".js-audio"),this.playButtonIcon=document.querySelector(".js-play .fa"),this.audioContext=new AudioContext,this.analyser=this.audioContext.createAnalyser(),this.scriptProcessor=this.audioContext.createScriptProcessor(2048,1,1),this.chunks=[],this.stream=null,this.input=null,this.recorder=null,this.recording=null,this.isRecording=!1,this.isPlaying=!1,this.recordingTime=0,this.analyser.smoothingTimeConstant=.3,this.analyser.fftSize=4096,this.barWidth=2,this.barGutter=2,this.barColor="#49F1D5",this.canvasContext=this.canvas.getContext("2d"),this.bars=[],this.width=0,this.height=0,this.halfHeight=0,this.drawing=!1,this.minRms=.002,this.onProcessSample=function(t,s){},this.onStartRecording=function(t){},this.onStopRecording=function(t){},this.setMessage=t=>{this.messageContainer.innerHTML=t,this.messageContainer.classList.add("message--visible")},this.hideMessage=()=>{this.messageContainer.classList.remove("message--visible")},this.requestMicrophoneAccess=()=>{navigator.mediaDevices?navigator.mediaDevices.getUserMedia({audio:!0}).then(s=>{t.setAudioStream(s)},s=>{t.setMessage("Something went wrong requesting the userMedia. <br/>Please make sure you're viewing this demo over https.")}):t.setMessage("Your browser does not support navigator.mediadevices. <br/>This is needed for this demo to work. Please try again in a differen browser.")},this.setAudioStream=t=>{this.input=this.audioContext.createMediaStreamSource(t),this.recorder=new window.MediaRecorder(t),this.setRecorderActions(),this.setupWaveform()},this.setRecorderActions=()=>{this.recorder.ondataavailable=this.saveChunkToRecording,this.recorder.onstop=this.saveRecording},this.saveChunkToRecording=t=>{this.chunks.push(t.data)},this.saveRecording=()=>{this.recording=URL.createObjectURL(new Blob(this.chunks,{type:"audio/ogg; codecs=opus"})),this.chunks=[],this.audioPlayer.setAttribute("src",this.recording),this.playButton.classList.remove("button--disabled")},this.startRecording=()=>{this.isRecording=!0,this.recordButton.classList.add("button--active"),this.recordingTime=new Date().getTime(),this.recorder.start(),this.onStartRecording(this.audioContext.sampleRate)},this.stopRecording=()=>{this.onStopRecording(new Date().getTime()-this.recordingTime),this.isRecording=!1,this.recordButton.classList.remove("button--active"),this.recorder.stop()},this.toggleRecording=()=>{this.isRecording?this.stopRecording():this.startRecording()},this.setupWaveform=()=>{this.canvasContext=this.canvas.getContext("2d"),this.width=this.canvas.offsetWidth,this.height=this.canvas.offsetHeight,this.halfHeight=this.canvas.offsetHeight/2,this.canvasContext.canvas.width=this.width,this.canvasContext.canvas.height=this.height,this.input.connect(this.analyser),this.analyser.connect(this.scriptProcessor),this.scriptProcessor.connect(this.audioContext.destination),this.scriptProcessor.onaudioprocess=this.processInput},this.processAudioBuffer=function(t,s){let e=this.autoCorrelate(s,this.audioContext.sampleRate);e.pitch>-1&&this.onProcessSample(t-this.recordingTime,e)},this.autoCorrelate=function(t,s){let e=t.length,i=0,r=0,h=0;for(let a=0;a<e;a++){let o=t[a];i+=o*o,h+=Math.abs(o)}if(r=h/e,(i=Math.sqrt(i/e))<this.minRms)return{pitch:-1,rms:i,velocity:r};let n=0,c=e-1;for(let l=0;l<e/2;l++)if(.2>Math.abs(t[l])){n=l;break}for(let d=1;d<e/2;d++)if(.2>Math.abs(t[e-d])){c=e-d;break}let u=Array(e=(t=t.slice(n,c)).length).fill(0);for(let g=0;g<e;g++)for(let p=0;p<e-g;p++)u[g]=u[g]+t[p]*t[p+g];let f=0;for(;u[f]>u[f+1];)f++;let y=-1,m=-1;for(let v=f;v<e;v++)u[v]>y&&(y=u[v],m=v);let b=m,$=u[b-1],C=u[b],R=u[b+1];return{pitch:s/(b=this.fixPitch(b,($+R-2*C)/2,(R-$)/2)),rms:i,velocity:r}},this.fixPitch=function(t,s,e){return s&&(t-=e/(2*s)),t},this.processInput=t=>{if(this.isRecording){let s=t.inputBuffer.getChannelData(0);this.processAudioBuffer(new Date().getTime(),s);let e=new Uint8Array(this.analyser.frequencyBinCount);this.analyser.getByteFrequencyData(e),this.bars.push(this.getAverageVolume(e)),this.bars.length<=Math.floor(this.width/(this.barWidth+this.barGutter))?this.renderBars(this.bars):this.renderBars(this.bars.slice(this.bars.length-Math.floor(this.width/(this.barWidth+this.barGutter))),this.bars.length)}else this.bars=[]},this.getAverageVolume=t=>{let s=t.length,e=0,i=0;for(;i<s;i++)e+=t[i];return e/s},this.renderBars=t=>{this.drawing||(this.drawing=!0,window.requestAnimationFrame(()=>{this.canvasContext.clearRect(0,0,this.width,this.height),t.forEach((t,s)=>{this.canvasContext.fillStyle=this.barColor,this.canvasContext.fillRect(s*(this.barWidth+this.barGutter),this.halfHeight,this.barWidth,this.halfHeight*(t/100)),this.canvasContext.fillRect(s*(this.barWidth+this.barGutter),this.halfHeight-this.halfHeight*(t/100),this.barWidth,this.halfHeight*(t/100))}),this.drawing=!1}))},this.play=()=>{this.isPlaying=!0,this.audioPlayer.play(),this.playButton.classList.add("button--active"),this.playButtonIcon.classList.add("fa-pause"),this.playButtonIcon.classList.remove("fa-play")},this.stop=()=>{this.isPlaying=!1,this.audioPlayer.pause(),this.audioPlayer.currentTime=0,this.playButton.classList.remove("button--active"),this.playButtonIcon.classList.add("fa-play"),this.playButtonIcon.classList.remove("fa-pause")},this.togglePlay=()=>{this.isPlaying?this.stop():this.play()},this.setupPlayer=()=>{this.audioPlayer.addEventListener("ended",()=>{this.stop()})},this.requestMicrophoneAccess(),this.setupPlayer(),this.recordButton.addEventListener("mouseup",this.toggleRecording),this.playButton.addEventListener("mouseup",this.togglePlay);let t=this}}